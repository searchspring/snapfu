# This is a basic workflow to help you get started with Actions

name: build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm install
      - run: npm test
      - run: npm run format-check
      - name: Extract Branch Name
        run: echo "::set-env name=BRANCH::$(echo ${GITHUB_REF##*/})"

      - name: Create coverage variable
        if: env.BRANCH != 'master'
        run: |
          COVER=$(node node_modules/jest/bin/jest.js --coverage --silent 2>&1 | grep -v Time)
          COVER="${COVER//'%'/'%25'}"
          COVER="${COVER//$'\n'/'%0A'}"
          COVER="${COVER//$'\r'/'%0D'}"
          echo "::set-env name=COVERAGE::$COVER"

      - name: comment PR
        if: env.BRANCH != 'master'
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          msg: "<b>Coverage Report</b><br>\n```bash\n${{ env.COVERAGE }}\n```"
          check_for_duplicate_msg: true 

  build-go:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        cd api
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: cd api && go build -v ./...

    - name: Test
      run: cd api && go test -v -coverprofile=cover.out ./...

    - name: Extract Branch Name
      run: echo "::set-env name=BRANCH::$(echo ${GITHUB_REF##*/})"

    - name: Create coverage variable
      if: env.BRANCH != 'master'
      run: |
        COVER=$(cd api && go test -v -coverprofile=cover.out ./... 2>&1)
        COVER="${COVER//'%'/'%25'}"
        COVER="${COVER//$'\n'/'%0A'}"
        COVER="${COVER//$'\r'/'%0D'}"
        echo "::set-env name=COVERAGE::$COVER"
        
    - name: comment PR
      if: env.BRANCH != 'master'
      uses: unsplash/comment-on-pr@master
      env:
        GITHUB_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        msg: "<b>Coverage Report</b><br>\n```bash\n${{ env.COVERAGE }}\n```"
        check_for_duplicate_msg: true 
      